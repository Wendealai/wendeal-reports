name: Create/Delete Branch for Pull Request

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: read
  pull-requests: write

jobs:
  setup:
    name: Setup
    outputs:
      branch: ${{ steps.branch_name.outputs.current_branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch_name
        uses: tj-actions/branch-names@v8

  create_neon_branch:
    name: Create Neon Branch
    outputs:
      db_url: ${{ steps.create_neon_branch.outputs.db_url }}
      db_url_with_pooler: ${{ steps.create_neon_branch.outputs.db_url_with_pooler }}
    needs: setup
    if: |
      github.event_name == 'pull_request' && (
      github.event.action == 'synchronize'
      || github.event.action == 'opened'
      || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create Neon Branch
        id: create_neon_branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch_name: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Run Database Migrations
        run: npm run db:push
        env:
          DATABASE_URL: "${{ steps.create_neon_branch.outputs.db_url_with_pooler }}"
          DIRECT_URL: "${{ steps.create_neon_branch.outputs.db_url }}"

      - name: Initialize Database with Default Data
        run: node scripts/deploy-setup.js
        env:
          DATABASE_URL: "${{ steps.create_neon_branch.outputs.db_url_with_pooler }}"
          DIRECT_URL: "${{ steps.create_neon_branch.outputs.db_url }}"

      - name: Post Schema Diff Comment to PR
        uses: neondatabase/schema-diff-action@v1
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          compare_branch: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Comment PR with Database Info
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const comment = `## üóÑÔ∏è Database Branch Created

            A new Neon database branch has been created for this PR:

            **Branch Name:** \`preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}\`

            ### üöÄ Preview Environment
            - Database migrations have been applied
            - Default data has been initialized
            - Ready for testing!

            ### üìä What's included:
            - ‚úÖ All database tables and indexes
            - ‚úÖ Default user and categories
            - ‚úÖ Optimized for testing file uploads
            - ‚úÖ Performance monitoring enabled

            The database branch will be automatically deleted when this PR is closed.

            ---
            *This comment was automatically generated by the Neon workflow.*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  delete_neon_branch:
    name: Delete Neon Branch
    needs: setup
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Comment PR with Cleanup Info
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## üßπ Database Branch Deleted

            The Neon database branch for this PR has been automatically deleted:

            **Branch Name:** \`preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}\`

            ### ‚úÖ Cleanup Complete
            - Database branch removed
            - Resources freed
            - No further action required

            ---
            *This comment was automatically generated by the Neon workflow.*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
